{
  "network": {
    "name": "localhost",
    "chainId": "31337"
  },
  "deployer": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
  "timestamp": "2025-09-27T08:37:58.445Z",
  "contracts": {
    "ProfitHiveToken": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "abi": [
        "constructor(address)",
        "error ERC20InsufficientAllowance(address,uint256,uint256)",
        "error ERC20InsufficientBalance(address,uint256,uint256)",
        "error ERC20InvalidApprover(address)",
        "error ERC20InvalidReceiver(address)",
        "error ERC20InvalidSender(address)",
        "error ERC20InvalidSpender(address)",
        "error EnforcedPause()",
        "error ExpectedPause()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "event Approval(address indexed,address indexed,uint256)",
        "event MinterAdded(address indexed)",
        "event MinterRemoved(address indexed)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event Paused(address)",
        "event RewardDistributed(address indexed,uint256,string)",
        "event RewarderAdded(address indexed)",
        "event RewarderRemoved(address indexed)",
        "event Transfer(address indexed,address indexed,uint256)",
        "event Unpaused(address)",
        "function INITIAL_SUPPLY() view returns (uint256)",
        "function MAX_SUPPLY() view returns (uint256)",
        "function addMinter(address)",
        "function addRewarder(address)",
        "function allowance(address,address) view returns (uint256)",
        "function approve(address,uint256) returns (bool)",
        "function balanceOf(address) view returns (uint256)",
        "function burn(uint256)",
        "function burnFrom(address,uint256)",
        "function decimals() view returns (uint8)",
        "function distributeReward(address,uint256,string)",
        "function mint(address,uint256)",
        "function minters(address) view returns (bool)",
        "function name() view returns (string)",
        "function owner() view returns (address)",
        "function pause()",
        "function paused() view returns (bool)",
        "function removeMinter(address)",
        "function removeRewarder(address)",
        "function renounceOwnership()",
        "function rewarders(address) view returns (bool)",
        "function symbol() view returns (string)",
        "function totalSupply() view returns (uint256)",
        "function transfer(address,uint256) returns (bool)",
        "function transferFrom(address,address,uint256) returns (bool)",
        "function transferOwnership(address)",
        "function unpause()"
      ]
    },
    "RevenueSharing": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "abi": [
        "constructor(address,address)",
        "error EnforcedPause()",
        "error ExpectedPause()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "error ReentrancyGuardReentrantCall()",
        "event ForecastRewardAdded(uint256 indexed,address,uint256,uint256)",
        "event ForecastRewardClaimed(uint256 indexed,address,uint256)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event Paused(address)",
        "event RevenueDeposited(uint256 indexed,uint256)",
        "event RevenueDistributed(uint256 indexed,uint256)",
        "event RewardsClaimed(address indexed,uint256)",
        "event Staked(address indexed,uint256)",
        "event Unpaused(address)",
        "event Unstaked(address indexed,uint256)",
        "function addForecastReward(address,uint256,uint256)",
        "function claimForecastReward(uint256)",
        "function claimStakingRewards()",
        "function claimableRewards(address) view returns (uint256)",
        "function currentPoolId() view returns (uint256)",
        "function depositRevenue() payable",
        "function distributeRevenue(uint256)",
        "function emergencyWithdraw()",
        "function forecastRewardId() view returns (uint256)",
        "function forecastRewards(uint256) view returns (address,uint256,uint256,uint256,bool)",
        "function forecastersShare() view returns (uint256)",
        "function getUserStakeInfo(address) view returns (uint256,uint256,uint256,bool)",
        "function minStakingPeriod() view returns (uint256)",
        "function owner() view returns (address)",
        "function pause()",
        "function paused() view returns (bool)",
        "function platformShare() view returns (uint256)",
        "function profitHiveToken() view returns (address)",
        "function renounceOwnership()",
        "function revenuePools(uint256) view returns (uint256,uint256,uint256,bool)",
        "function stake(uint256)",
        "function stakersShare() view returns (uint256)",
        "function totalStaked() view returns (uint256)",
        "function transferOwnership(address)",
        "function unpause()",
        "function unstake(uint256)",
        "function updateRevenueShares(uint256,uint256,uint256)",
        "function userStakes(address) view returns (uint256,uint256,uint256)"
      ]
    },
    "ForecastData": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "abi": [
        "constructor(address)",
        "error EnforcedPause()",
        "error ExpectedPause()",
        "error OwnableInvalidOwner(address)",
        "error OwnableUnauthorizedAccount(address)",
        "event AccuracyCalculated(uint256 indexed,uint256)",
        "event ActualDataSubmitted(uint256 indexed,address indexed)",
        "event DataProviderAdded(address indexed)",
        "event DataProviderRemoved(address indexed)",
        "event ForecastSubmitted(uint256 indexed,address indexed,string,uint256,uint256)",
        "event OwnershipTransferred(address indexed,address indexed)",
        "event Paused(address)",
        "event StoreRegistered(string indexed,string,address)",
        "event Unpaused(address)",
        "function MIN_ACCURACY_FOR_REWARD() view returns (uint256)",
        "function activateStore(string)",
        "function addDataProvider(address)",
        "function dataProviders(address) view returns (bool)",
        "function deactivateStore(string)",
        "function forecastCounter() view returns (uint256)",
        "function forecasts(uint256) view returns (address,string,string,uint256,uint256,uint256,string,uint256,bool,bool)",
        "function getForecast(uint256) view returns (address,string,string,uint256,uint256,uint256,string,uint256[],uint256[],uint256,bool,bool)",
        "function getStore(string) view returns (string,string,address,bool,uint256,uint256)",
        "function getStoreForecasts(string) view returns (uint256[])",
        "function getUserForecasts(address) view returns (uint256[])",
        "function isEligibleForReward(uint256) view returns (bool)",
        "function owner() view returns (address)",
        "function pause()",
        "function paused() view returns (bool)",
        "function registerStore(string,string,string,address)",
        "function removeDataProvider(address)",
        "function renounceOwnership()",
        "function storeForecasts(string,uint256) view returns (uint256)",
        "function stores(string) view returns (string,string,address,bool,uint256,uint256)",
        "function submitActualData(uint256,uint256[])",
        "function submitForecast(string,string,uint256,uint256,string,uint256[]) returns (uint256)",
        "function transferOwnership(address)",
        "function unpause()",
        "function userForecasts(address,uint256) view returns (uint256)"
      ]
    }
  }
}